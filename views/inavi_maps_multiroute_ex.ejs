<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>다중 경로선 표시하기</title>
</head>

<body>
    <!-- <div class=header>

    </header> -->

    <div class="body">

    </div>
    <div class="map_wrap">

        <!-- <div id="map"></div> -->
        <div id="map" style="width:100%;height:100px;position:relative;overflow:hidden;"></div>

        <!-- 지도타입 컨트롤 div 입니다 -->
        <div class="custom_typecontrol radius_border">
            <span id="btnRoadmap" class="selected_btn" onclick="setMapType('roadmap')">지도</span>
            <span id="btnSkyview" class="btn" onclick="setMapType('skyview')">스카이뷰</span>
        </div>

        <!-- 경로탐색 컨트롤 div 입니다 -->
        <div class="custom_typecontrol radius_border" style="position:absolute;top:10px;left:10px;overflow:hidden;width:250px;height:30px;margin:0;z-index:1;border:1">
            <span id="btnStart" class="btn" onclick="setRouteType(1)" style="width:50px">출발</span>
            <span id="btnVia1" class="btn" onclick="setRouteType(3)" style="width:30px">경유1</span>
            <span id="btnVia2" class="btn" onclick="setRouteType(4)" style="width:30px">경유2</span>
            <span id="btnVia3" class="btn" onclick="setRouteType(5)" style="width:30px">경유3</span>
            <span id="btnVia4" class="btn" onclick="setRouteType(6)" style="width:30px">경유4</span>
            <span id="btnVia5" class="btn" onclick="setRouteType(7)" style="width:30px">경유5</span>
            <span id="btnEnd" class="btn" onclick="setRouteType(2)" style="width:50px">도착</span>
        </div>

        <div class="custom_typecontrol radius_border" style="position:absolute;top:10px;left:260px;overflow:hidden;width:50px;height:30px;margin:0;z-index:1;border:1">
        <span id="btnRoute" class="btn" onclick="doRoute()" style="width:50px">탐색</span>
        </div>

        <!-- 경로탐색 JSON 결과 div 입니다 -->
        <div class="custom_typecontrol radius_border" style="position:absolute;top:10px;left:330px;overflow:hidden;width:70;height:30px;margin:0;z-index:1;border:0">
            <span id="btnGoToJsonResult" class="btn" onclick="gotoJSON()" style="width:65px">JSON보기</span>
        </div>

        <!-- 검색 div -->
        <div style="position:absolute;left:10px;top:80px;width:250px;padding:5px;background:rgba(255, 255, 255, 0.8);z-index: 1;font-size:13px;border-radius: 5px;">
            <form onsubmit="searchKeyword(); return false;">
                키워드 : <input type="text" value="아이나비시스템즈" id="keyword" size="15">
                <button type="submit">검색</button>
            </form>
        </div>

        <!-- 메뉴 생성 -->
        <div id="menu_wrap" class="bg_white" style="top:120px">
            <div id="menu_title" style="text-align:center"><P>검색 결과 목록</P></div>
            <hr>
            <div style="font-size:12px;font-family:'Malgun Gothic', '맑은 고딕', sans-serif;">
                <div id="clicked_type" style="text-align:left">결과 갯수 : </div>
                <div id="clicked_name" style="text-align:left"></div>
            </div>
            <hr>
            <ul id="placesList"></ul>
        </div>
    </div>

    

    <link rel="stylesheet" href="css/maps_inavi.css" />
    <script type="text/javascript" src="script/inavimaps.js"></script>
    <script type="text/javascript" src="script/boundarys.js"></script>
    <script type="text/javascript" src="script/typenames.js"></script>
    <script type="text/javascript" src="script/route.js"></script>
    <script type="text/javascript" src="script/search.js"></script>
    <script type="text/javascript" src="script/tms.js"></script>
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.js"></script>

    <script>
        let result_obj = JSON.parse('<%- JSON.stringify(result) %>');

        let result_mode = result_obj.mode;
        if (result_mode === "clustering") {
            document.title = "클러스터링"
        } else if (result_mode === 'tsp') {
            document.title = "TSP"
        } else {
            let isSuccess = result_obj.header.isSuccessful;

            if (isSuccess) {
                user_pos = [ result_obj.routes[0].vertex_info[~~((result_obj.routes[0].vertex_info.length) / 2)].x, result_obj.routes[0].vertex_info[~~((result_obj.routes[0].vertex_info.length) / 2)].y ];
            } else {
                user_pos = [127.110767364419, 37.402186130724];// 아이나비시스템즈
            }

            user_obj = result_obj.user_info;
        }


        // map 사이즈 조절
        var screenHeight = window.innerHeight - 18;
        document.getElementById("map").style.height = screenHeight + "px";


        function initMap() {

            map = new inavi.maps.Map({
                center: user_pos,
                container: "map",
                zoom: 17
            });
            
            initMapObject(map);

            if (result_mode === "clustering") {
                drawClunster(result_obj.clusters);
            } else if (result_mode === "tsp") {
                drawBestwaypoint(result_obj.waypoints);
                reqBestwayRoute(result_obj.waypoints);
            } else {
                // 경로 그리기
                drawRoutes(result_obj.routes, map, route_offset, route_color);

                // 출발지
                setDeparture(new inavi.maps.LngLat(user_obj.start.x ,user_obj.start.y));
                // 목적지
                setDestination(new inavi.maps.LngLat(user_obj.end.x, user_obj.end.y));
                // 경유지
                if (user_obj.vias != undefined) {
                    for(var ii=0; ii<user_obj.vias.length; ii++) {
                        if (user_obj.vias[ii].x != 0 && user_obj.vias[ii].y != 0) {
                            setWaypoints(ii, new inavi.maps.LngLat(user_obj.vias[ii].x, user_obj.vias[ii].y));
                        }
                    }
                }
                else if (user_obj.via != undefined) {
                    document.getElementById('btnVia').className = 'checked_btn';
                    setWaypoint(new inavi.maps.LngLat(user_obj.via.x, user_obj.via.y));
                } else {
                    setWaypoint(null);
                }

                // 경로 정보를 커스텀 오버레이로 생성하고 지도에 표시합니다
                drawRouteInfo(result_obj.routes);
            }
        } // initMap

        function doRoute() {
            if (typeRouteStep == 0 || departure_pos === undefined || destination_pos === undefined ) {
                alert("출,도착지를 새로 설정하고 사용하세요.")
            } else {
                var params = new URLSearchParams(window.location.search);
                var pathsplit = window.location.pathname.split('/');
                var pathname = '/api/' + pathsplit[pathsplit.length-1];                
                params.set('start', departure_pos.lng.toString() + ',' + departure_pos.lat.toString());
                params.set('end', destination_pos.lng.toString() + ',' + destination_pos.lat.toString());
                // var pathname = '/optimalposition'; // window.location.pathname;
                // var move2url = pathname + '?' + params.toString();
                // var move2url = pathname + '?lng=' + latlng.lng + '&lat=' + latlng.lat + '&type=0&near=true&expand=true&api=inavi';
                params.delete('vias');
                for(var ii = 0; ii < waypoint_pos.length; ii++) {
                    if (waypoint_pos[ii] != null && waypoint_pos[ii].lng > 120 && waypoint_pos[ii].lat > 30) {
                        params.append('vias', waypoint_pos[ii].lng.toString() + ',' + waypoint_pos[ii].lat.toString());
                    }
                }

                getRoutes(pathname, params);

                setRouteType(0)
            }
        }


        // 경로 결과를 새창에서 JSON 결과로 보내도록 하자
        function gotoJSON() {
            if (departure_pos === undefined || destination_pos === undefined ) {
                alert("출,도착지를 새로 설정하고 사용하세요.")
            } else {
                var params = new URLSearchParams(window.location.search);
                params.set('start', departure_pos.lng.toString() + ',' + departure_pos.lat.toString());
                params.set('end', destination_pos.lng.toString() + ',' + destination_pos.lat.toString());
                // var pathname = '/optimalposition'; // window.location.pathname;
                // var move2url = pathname + '?' + params.toString();
                // var move2url = pathname + '?lng=' + latlng.lng + '&lat=' + latlng.lat + '&type=0&near=true&expand=true&api=inavi';
                params.delete('vias');
                for(var ii = 0; ii < waypoint_pos.length; ii++) {
                    if (waypoint_pos[ii] != null && waypoint_pos[ii].lng > 120 && waypoint_pos[ii].lat > 30) {
                        params.set('vias', waypoint_pos[ii].lng.toString() + ',' + waypoint_pos[ii].lat.toString());
                    }
                }
                var pathname = '/api/multiroute'; // window.location.pathname;
                var route2url = pathname + '?' + params.toString();
                // var route2url = window.location.pathname + '?' + params.toString();

                console.log("request route : " + route2url.toString());

                window.open(route2url, '_blank');     
                
                setRouteType(0);
            }
        }


        // // 키워드 검색 
        function searchKeyword() {
            var keyword = document.getElementById('keyword').value;

            if (!keyword.replace(/^\s+|\s+$/g, '')) {
                alert('키워드를 입력해주세요');
                return false;
            }

            console.log("request, search keyword: " + keyword)

            // var pathname = 'https://api-maps.cloud.toast.com/maps/v3.0/appkeys/uuLPV7fHLk6NIVfCPnBv/searches';
            var pathname = 'https://dev-maps.inavi.com/maps/v3.0/appkeys/<%=javascriptkey%>/searches'
            //     var search2url = pathname + '?&query=' + keyword.toString() + '&reqcount=' + 10;

            getSearch(pathname, keyword);    
        }

    </script>
    <script type="text/javascript"
        src="https://dev-maps.inavi.com/maps/v3.0/appkeys/<%=javascriptkey%>/maps?callback=initMap"></script>
    <!-- <script src="/script/position.js"></script> -->

</body>

</html>